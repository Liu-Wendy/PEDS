# analysis options
# forbidden="loc(car1)==communicate & loc(car2)==communicate & abs(car1_x -car2_x) +abs(car1_y -car2_y) <0.5"
system = "system"
initially = "loc(car1)==communicate & car1.x==0 & car1.y==13 & loc(car2)==communicate & car2.x==0 & car2.y==4 & car1.v==0 & car1.t==0 & car1.angle==0.2 & car1.u1 == [-0.523,0.523] & car1.u2 == [-0.3,0.3] & car1.fuel == 0 & car2.v==0 & car2.t==0 & car2.angle==0.2 & car2.u1 == [-0.523,0.523] & car2.u2 == [-0.3,0.3] & car2.fuel == 0 & car1.z == 0 & car2.z == 0"
forbidden="((car1_x >= 0 && car1_x <= 19 && car1_y >= 18) || (car1_x >= 0 && car1_x <= 19 && car1_y <= 3) || (car1_x > 8 && car1_x < 13 && car1_y > 10 && car1_y < 10.5)) && ((car2_x >= 0 && car2_x <= 19 && car2_y >= 18) || (car2_x >= 0 && car2_x <= 19 && car2_y <= -3) || (car2_x > 8 && car2_x < 13 && car2_y > 10 && car2_y < 10.5))"
iter-max = 5
rel-err = 1.0e-12
abs-err = 1.0e-13
obj_function = "abs(car1_x-4)+abs(car1_y-7)+ 0.01 * car1_fuel+abs(car2_x-2)+abs(car2_y-5)+ 0.01 * car2_fuel"
feasible_fun = "abs(car1_x-4)+abs(car1_y-7)+abs(car2_x-2)+abs(car2_y-5)"
staytime4loc = "true"
addInit = "false"